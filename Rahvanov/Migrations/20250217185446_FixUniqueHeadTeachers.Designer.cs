// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rahvanov.Database;

#nullable disable

namespace Rahvanov.Migrations
{
    [DbContext(typeof(Teachers_DbContext))]
    [Migration("20250217185446_FixUniqueHeadTeachers")]
    partial class FixUniqueHeadTeachers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rahvanov.Models.AcademicDegree", b =>
                {
                    b.Property<int>("AcademicDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AcademicDegreeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasComment("Наименование учёной степени");

                    b.HasKey("AcademicDegreeId")
                        .HasName("pk_academic_degrees");

                    b.HasIndex("Name")
                        .HasDatabaseName("idx_academic_degrees_name");

                    b.ToTable("AcademicDegrees");
                });

            modelBuilder.Entity("Rahvanov.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DepartmentId"));

                    b.Property<DateTime>("FoundationYear")
                        .HasColumnType("date")
                        .HasComment("Год основания кафедры");

                    b.Property<int>("HeadTeacherId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasComment("Наименование кафедры");

                    b.HasKey("DepartmentId")
                        .HasName("pk_departments");

                    b.HasIndex("HeadTeacherId")
                        .IsUnique()
                        .HasDatabaseName("unique_head_teacher_id");

                    b.HasIndex("Name")
                        .HasDatabaseName("idx_departments_name");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Rahvanov.Models.Discipline", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DisciplineId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasComment("Наименование дисциплины");

                    b.HasKey("DisciplineId")
                        .HasName("pk_disciplines");

                    b.HasIndex("Name")
                        .HasDatabaseName("idx_disciplines_name");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("Rahvanov.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PositionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasComment("Наименование должности");

                    b.HasKey("PositionId")
                        .HasName("pk_positions");

                    b.HasIndex("Name")
                        .HasDatabaseName("idx_positions_name");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Rahvanov.Models.Teachers", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TeacherId"));

                    b.Property<int>("AcademicDegreeId")
                        .HasColumnType("integer");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasComment("ФИО преподавателя");

                    b.Property<int>("PositionId")
                        .HasColumnType("integer");

                    b.HasKey("TeacherId")
                        .HasName("pk_teachers");

                    b.HasIndex("AcademicDegreeId")
                        .HasDatabaseName("idx_teachers_fk_f_academicdegree");

                    b.HasIndex("DepartmentId")
                        .HasDatabaseName("idx_teachers_fk_f_department");

                    b.HasIndex("PositionId")
                        .HasDatabaseName("idx_teachers_fk_f_position");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Rahvanov.Models.Workload", b =>
                {
                    b.Property<int>("WorkloadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WorkloadId"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("integer");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.HasKey("WorkloadId")
                        .HasName("pk_workloads");

                    b.HasIndex("DisciplineId")
                        .HasDatabaseName("idx_workloads_fk_f_discipline");

                    b.HasIndex("TeacherId")
                        .HasDatabaseName("idx_workloads_fk_f_teacher");

                    b.ToTable("Workloads");
                });

            modelBuilder.Entity("Rahvanov.Models.Department", b =>
                {
                    b.HasOne("Rahvanov.Models.Teachers", "HeadTeacher")
                        .WithOne()
                        .HasForeignKey("Rahvanov.Models.Department", "HeadTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_department_head_teacher");

                    b.Navigation("HeadTeacher");
                });

            modelBuilder.Entity("Rahvanov.Models.Teachers", b =>
                {
                    b.HasOne("Rahvanov.Models.AcademicDegree", "AcademicDegree")
                        .WithMany("Teachers")
                        .HasForeignKey("AcademicDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_teacher_academic_degree");

                    b.HasOne("Rahvanov.Models.Department", "Department")
                        .WithMany("Teachers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_teacher_department");

                    b.HasOne("Rahvanov.Models.Position", "Position")
                        .WithMany("Teachers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_teacher_position");

                    b.Navigation("AcademicDegree");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Rahvanov.Models.Workload", b =>
                {
                    b.HasOne("Rahvanov.Models.Discipline", "Discipline")
                        .WithMany("Workloads")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workload_discipline");

                    b.HasOne("Rahvanov.Models.Teachers", "Teacher")
                        .WithMany("Workloads")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workload_teacher");

                    b.Navigation("Discipline");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Rahvanov.Models.AcademicDegree", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Rahvanov.Models.Department", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Rahvanov.Models.Discipline", b =>
                {
                    b.Navigation("Workloads");
                });

            modelBuilder.Entity("Rahvanov.Models.Position", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Rahvanov.Models.Teachers", b =>
                {
                    b.Navigation("Workloads");
                });
#pragma warning restore 612, 618
        }
    }
}
